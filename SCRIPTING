An Involved Affair

Scripting Environment Provisions to the JavascriptCore Standard Global Environment

** FEATURES NOT LISTED HERE ARE NOT CONSIDERED STABLE **

Function: echo(String, ...)

  Echo (0) through (N) strings separated by space on the standard output,
  and terminate the sequence with a new-line character.

Function: run(String command, ...)

  Run the command given with the remaining parameters given, capturing standard io and status to
  a new prototype of the run function.

  Prototype: run.prototype

    stdout: The String output of the command.

    stderr: The String error of the command.

    status: The Number status of the command. (0) indicates success, and (1+) are error
            codes as defined by the command being called.

    valueOf: returns status

    toString: returns (stdout || stderr || status) in resolve order.

Function: localPath()

  Retrieve the current directory as a String.

Function: localPath(String path)

  Set the current directory to path. Throws ReferenceError if path is not a directory.
  Returns true if the operation is succesful.

Object: Environment

  A JavaScript implementation of environment where Envronment[K], represents the value
  of an environment key by the name K. Use standard JavaScript set/get/delete to manage
  environment. This environment object uses thread locks to ensure thread safety.

Function: addPluginPath(String path)

  Adds the given path to the plugin search path. Throws an error if the path is not an existing
  directory.

Function: loadPlugin(String path)

  Loads the given plugin if it is found in the current directory, by the path given, or within the
  plugin search path (in that order). Throws an error if path is not found.

Constructor: MachineType(Object representation)

  Creates and returns a MachineType.prototype with the representation given. This is an adanced function,
  which most users do not need to worry about. There are only a few MachineTypes. This constructor,
  provides each type with a unified prototype backing hosted by this constructor. The standard types are,
  predefined within the JavaScript Global Environment. This allows types to be used as parameters to,
  functions, and for values which are not MachineType natives to be marked for a specific conversion.

Global MachineTypes:

  Int8: {value: new MachineType({width:1, signed:true})},
  Int16: {value: new MachineType({width:2, signed:true})},
  Int32: {value: new MachineType({width:4, signed:true})},
  Int64: {value: new MachineType({width:8, signed:true})},

  UInt8: {value: new MachineType({width:1})},
  UInt16: {value: new MachineType({width:2})},
  UInt32: {value: new MachineType({width:4})},
  UInt64: {value: new MachineType({width:8})},

  Void: {value: new MachineType({width:0})},
  Float: {value: new MachineType({width:4, floating:true})},
  Double: {value: new MachineType({width:8, floating:true})},
  Pointer: {value: new MachineType({width:MachineType.width, pointer:true})},
  VarArg:{value: new MachineType({vararg:true})}

  * MachineType.width is the size of an unsigned pointer value as defined by the C compiler, which
    compiled the MachineTypes library.

Prototype: MachineType.prototype

  Property: Boolean pointer

    The pointer property is true if this is a pointer to a type of this[width].

  Property: Boolean constant

    This property has no effect at this time.

  Property: Boolean signed

    True if this is a signed machine type of this[width].

  Property: Boolean unsigned (read-only)

    True if this[signed] is false.

  Property: Boolean floating

    True if this is a floating machine type of this[width].
  
  Property: Boolean vararg

    True if this type represents the C-ellipsis-function-parameter: '...'.

  Property: String name

    A string name which represents this type.

  Function: Number lengthOf(Number count)

    Returns the number of bytes required by this type, given N count members, multiplied by this[width].

  Function: Number unitsOf(Number bytes)

    Returns the maximum number units that will fit within bytes.

  Property: Number bits (read-only)

    Returns the number of bits occupied by a single unit of this type.

  Function: Number valueOf(Void)

    Returns the internal type code representation of this type.

  Function: String toString(Void)

    Returns the internal character code representation of this type.

  Function: MachineType toConst(Void)

    Returns a copy of this type with the constant flag active.

  Function: Number readAddress(Address address)

    Returns the value of this type at the given address.

  Function: Number readAddress(Address address, Number element)

    Returns the value of this type at the given address[element].

  Function: Undefined writeAddress(Address address, Number value)

    Writes the value to the given address.

  Function: Undefined writeAddress(Address address, Number element, Number value)

    Writes the value to the the given address[element].

  Function: Undefined bindAddress(Address address, Object object, Any propertyName)

    Creates a getter and setter for this type at the given address upon object specified, using the
    given property name for the accessor.

  Function: Any value(Object object)

    Coerces object to a Number Object, and marks the new Number Object as a member of this type.
